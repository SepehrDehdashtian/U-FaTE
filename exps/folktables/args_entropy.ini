[Arguments]

# project options
project_name  = FolkTrainEntropy

monitor       = {"metric": "loss", "decreasing": 1}
mode          = Train
control_type  = EndToEndEntropy

# dataset options
dataset = FolkTablesRawLoader

dataset_options  = {"dataset"       : {"dir"        : "FolkTables", 
                                        "name"      : "FolkTablesRawLoader"
                                      },
                    "path"              : "/research/hal-datastage/datasets/processed/folktables/states/WA/Age/Emp/",
                    "sensitive_attr"    : "age",
                    "train_size"        : 0.7
                    }


batch_size_test  = 128
batch_size_train = 128

no_progress_bar = False

# model options
model_type    = { "feature_extractor": "FolkEmbedding",
                  "encoder"  : "EncFolk",
                  "target"   : "TgtFolk",
                  "adversary": "AdvFolk"
                  }


model_options = { "feature_extractor": {},
                 "encoder"  : {"ndim":57, "r":1, "hdl":128},
                 "target": {"nout": 2, "r": 1, "hdl": 128},
                 "adversary": {"nout":96, "r":1, "hdl":128}
                }   



tau   = 0.0
beta  = 0.0
alpha = 0.0



# training options
nepochs                  = 10
check_val_every_n_epochs = 1
control_epoch            = 0
num_adv_train_iters      = 1

learning_rate            = 2e-5

optim_method             = {"encoder"  : "AdamW",
                            "target"   : "AdamW",
                            "adversary": "AdamW",
                            "feature_extractor" : "AdamW"
                            }

optim_options            = {"encoder"  : {"weight_decay": 2e-4},
                            "target"   : {"weight_decay": 2e-4},
                            "adversary": {"weight_decay": 2e-4},
                            "feature_extractor" : {"weight_decay": 2e-4}
                            }


scheduler_method         = CosineAnnealingLR
scheduler_options        = {"T_max": 5, "eta_min": 5e-7}


# loss options
loss_type    = {"target"   : "Classification",
                "adversary": "Classification"
                }

loss_options = {"target"   : {},
                "adversary": {}
                }

# metric options
metric_target          = {"utility"  : "AccuracyUtility"}

metric_target_options  = {"utility": {"one_hot": 0}}

metric_control         = {"SP"          : "DP_SingleLabel"
                          }

metric_control_options = {"SP"    : {
                                "num_y_classes": 2,
                                "num_s_classes": 96,
                                "num_sensitive_att": 1
                                    }
                        }




nthreads = 2


[Arguments]

# project options
project_name  = FolkTrainKernelDST

monitor       = {"metric": "loss", "decreasing": 1}
mode          = Train
control_type  = EndToEndKIRL

# dataset options
dataset = FolkTablesRawLoaderDST

dataset_options  = {"dataset"       : {"dir"        : "FolkTables", 
                                        "name"      : "FolkTablesRawLoaderDST"
                                      },
                    "path"              : "/research/hal-datastage/datasets/processed/folktables/states/WA/Age/Emp/",
                    "sensitive_attr"    : "age",
                    "kernel_numSamples" : 5000000000000,
                    "train_size"        : 0.7
                    }


batch_size_test  = 128
batch_size_train = 128

no_progress_bar  = False

# model options
model_type    = { "feature_extractor": "FolkEmbedding",
                  "target"   : "TgtFolk"
                  }


model_options = { "feature_extractor": {},
                 "target": {"nout": 2, "r": 1, "hdl": 128}
                }   

dim_z = 1
build_kernel = end2end_kernel

gamma = 2e-5


tau   = 0.0
beta = 0.0
alpha = 0.0

# Kernel options
rff_flag         = True
kernel_x         = RFFGaussian
kernel_x_options = {"rff_dim": 1000, "sigma_numel_max": 4000}
kernel_y         = RFFLinear
kernel_y_options = {}
kernel_s         = RFFGaussian
kernel_s_options = {}



# training options
nepochs                  = 10
NumEpochs_pretrain       = 5
check_val_every_n_epochs = 1


learning_rate            = 5e-5

optim_method             = { "target"            : "AdamW"
                           , "feature_extractor" : "AdamW"
                            }
optim_options            = { "target"            : {"weight_decay": 2e-5}
                           , "feature_extractor" : {"weight_decay": 2e-5}
                            }


scheduler_method         = CosineAnnealingLR
scheduler_options        = {"T_max": 5, "eta_min": 0}


# loss options
loss_type    = {"DEP_ZY"   : "DEPLoss",
                "DEP_ZS"   : "DEPLoss",
                "target"   : "Classification"
                }
loss_options = {"DEP_ZY"   : {"onehot_num_classes": 2,
                              "kernel_s": "Gaussian",
                              "kernel_s_opts": {},
                              "kernel_z": "RFFLinear",
                              "kernel_z_opts": {},
                              "one_hot_s" : 0
                              },
                "DEP_ZS"   : {"onehot_num_classes": 95,
                              "kernel_s": "Gaussian",
                              "kernel_s_opts": {},
                              "kernel_z": "RFFLinear",
                              "kernel_z_opts": {},
                              "one_hot_s" : 0
                              },
                "target"   : {}
                }

# metric options
metric_target          = {"utility"  : "AccuracyUtility"}

metric_target_options  = {"utility": {"one_hot": 0}}

metric_control         = {"SP"          : "DP_SingleLabel"
                          ,"DEP_ZS"      : "NonParametricDependence"
                          ,"DEP_ZY"      : "NonParametricDependence"
                          }


metric_control_options = {"SP"    : {
                                "num_y_classes": 2,
                                "num_s_classes": 95,
                                "num_sensitive_att": 1
                                    }
                        ,"DEP_ZS": {"rff": 1, "score_list": {"HSIC": {}},
                                              "kernel_z": "RFFLinear",
                                              "kernel_z_opts": {},
                                              "kernel_s": "RFFGaussian",
                                              "kernel_s_opts": {"rff_dim": 1000, "sigma_numel_max": 1000}}
                        ,"DEP_ZY": {"rff": 1, "score_list": {"HSIC": {}},
                                              "kernel_z": "RFFLinear",
                                              "kernel_z_opts": {},
                                              "kernel_s": "RFFGaussian",
                                              "kernel_s_opts": {"rff_dim": 1000, "sigma_numel_max": 1000}}
                        }


nthreads = 2
precision = 32
